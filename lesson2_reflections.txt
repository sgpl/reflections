What happens when you initialize a repository? Why do you need to do it?
	a git repo gets created when you initialize a repository - we need to do it because that's how we are able to initialize git and start commiting or taking snapshots of progress. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	It's different because the staging area is somewhere where we can add stuff that we want tracked individually - working directory contains all files and the repo contains the commits we've made - so it can contain commits we make based on what we add to the stating area. 

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?